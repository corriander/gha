---
name: Create a github release
description: |
  The version number is calculated from commits and a releae created.

  Subsequent steps may add assets to the release or otherwise modify its 
  metadata.

inputs:
  node-version:
    description: The version of node to install the tooling
    required: true

  semantic-release-version:
    description: The version of the semantic-release tool to use
    required: true

  dry-run:
    description: Run semantic-release in dry-run mode (e.g. to peek a release)
    required: false
    default: 'false'

  github-token:
    description: GITHUB_TOKEN with appropriate permissions set in the workflow
    required: true


outputs:
  version:
    description: The release version determined by semantic-release
    value: ${{ steps.review.outputs.version }}

  valid:
    description: Whether the version is a valid release version (i.e. not blank)
    value: ${{ steps.review.outputs.valid }}


runs:
  using: composite
  steps:
    - uses: corriander/gha/semantic-release/agnostic-install@main
      with:
        node-version: ${{ inputs.node-version }}
        semantic-release-version: ${{ inputs.semantic-release-version }}

    - name: ðŸš€ Semantic Release
      id: semantic-release
      shell: bash
      run: |
        if [[ '${{ inputs.dry-run }}' == 'true' ]]; then
          extra_args=--dry-run
        fi
        npx semantic-release -v $extra_args
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: ðŸ”¬ Review release
      id: review
      shell: bash
      run: |
        version=${{ steps.semantic-release.outputs.version }}
        if [[ -z "${version}" ]]; then
          valid='false'
        else
          valid='true'
        fi

        echo "valid=${valid}" | tee -a $GITHUB_OUTPUT
        echo "version=${version}" | tee -a $GITHUB_OUTPUT
